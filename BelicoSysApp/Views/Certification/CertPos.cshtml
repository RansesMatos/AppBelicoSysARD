@{
    // Aquí puedes definir variables de Razor o realizar configuraciones iniciales si es necesario
}

    <meta charset="UTF-8">
    <title>Formulario No.25</title>
   @* <link rel="stylesheet" href="~/css/style.css"> <!-- Asegúrate de tener este archivo CSS para los estilos --> *@


    <div>
    <h5 id="searchModalLabel"><strong>Buscar Miembro Para Formulario 25.</strong></h5>
        <div class="row" >
            <div class="col" >
        <input type="text" id="searchByCarnet" class="form-control" placeholder="Ingrese un NoCarnet" />
        </div>

        <div class="col" >
        <input type="text" id="searchByCedula" class="form-control" placeholder="Ingrese una cédula" />
        </div>
    </div>
    <button type="button" class="btn btn-primary mt-2" id="btnBuscar" name="btnBuscar">Buscar</button>
    </div>
    <div id="notification"></div>

<div class="row">

    <div class="col-sm-12 col-md-6 col-lg-4 mb-3">
        <label class="form-label" for="MilitarNo"><strong>Nombre:</strong></label>
        <select class="form-select" id="MilitarNo" name="MilitarNo" onclick="loadDropDownDataCert()" style="width: auto">
        </select>
        <input type="hidden" class="form-control" id="AsignacionNombre" name="AsignacionNombre" readonly />
    </div>
    <div class="container" >
    <button type="button" class="btn btn-primary" id="btnSelect" name="btnSelect">Seleccionar</button>
    </div>
</div>

    <div class="content" id="cuerpo" name="cuerpo">
        <p class="mt-2" >Form. No 25, ARD.</p>
        <h2 class="text-center">ARMADA DE REPÚBLICA DOMINICANA</h2>
        <h3 class="text-center" >RECIBO MEMORANDUM</h3>

        <div class="row container" >

        <div class="col d-flex">
        <span class="mr-2 px-auto"><strong> Lugar: </strong></span>
        <span>Santo Domingo, Este.</span>
        </div>

       <div class="col d-flex">
        <p class="ml-2" ><strong>Fecha: </strong></p>
        <p id="fecha"></p>
        
    </div>

    </div>

    <span>Acuso recibo al, INTENDENTE DEL MAT.BELICO, ARD De los efectos siguientes para uso oficial del</span>
        <span id="rango" name="rango"></span>
        <span id="nombre" name="nombre"></span>
        <input type="hidden" id="idarma" name="idarma"/>
        <span>propiedades de la Armada de la ARD y me comprometo a devolverlos cuando sean requeridos por la autoridad competente.</span>

        <div class="line">------------------------</div>

        <h3>CANTIDAD    ARTICULO    VALOR</h3>
        <ul id="invetario" name="invetario">
            
        </ul>
    <ul id="invetario2" name="invetario2">
    </ul>   

        <div class="line">-x-x-x-x-x-x-x-x-x-x-x-x--x-x-x-x-x-x-x-x-</div>

        
        <span id="nombred" name="nombred"></span>
        <span id="rangod" name="rangod"></span>
        <span id="cedula" name="cedula"></span>
        <span id="dir" name="dir"></span>
    <span class="mb-2"><strong>YAN LIROY VARGAS CAMINERO CAPITÁN DE NAVÍO INTENDENTE DEL MAT.BELICO, ARD</strong></span>
               
    </div>

<div class="actions mb-4">
@*     <form asp-controller="Certification" asp-action="Crearpdf25" method="post" target="_blank">
        <button type="submit" class="btn btn-primary">Imprimir en Pantalla</button>
    </form> *@
    <a id="btnpdf" name="btnpdf" class="btn btn-success mb-2 mt-2" style="background-color:#0D6EFD" >Exportar a PDF</a>
</div>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script>
    $(document).ready(() => {
        loadDropDownDataCert();
        loadDocDataCert();
        //Pdf();
        setupPdfButton();


    });
    function setupPdfButton() {
        const btnSelector = $('#btnpdf');
        const pdfURL = "/Certification/Crearpdf25";

        btnSelector.click(() => {
            const selectedOption = $('option').val();  // Ensure you use the correct selector for your <select>
            window.open(pdfURL + '?selectedOption=' + selectedOption, '_blank');
        });
    }
    function loadDropDownDataCert() {
        const btnSelectWeapon = $('#btnBuscar');

        btnSelectWeapon.click(() => {
            let carnet = document.getElementById("searchByCarnet").value;
            let cedula = document.getElementById("searchByCedula").value;
            const URL = "/Asignacion/SearchPeople";
            $.get(URL, { carnet, cedula }, (resp) => {
                console.log(resp);
                let dropdown = $('#MilitarNo');
                dropdown.empty(); // Clear existing options

                // Add options to the dropdown
                $.each(resp, function (index, item) {
                    dropdown.append($('<option id="selecion1" name="selecion1"></option>').text(item.rangos + " " + item.nombres + " - ( " + item.cedula + " )").val(item.militarNo));
                });

            })
        });
    }
    function loadDocDataCert() {
        const btnSelector = $('#btnSelect');
        btnSelector.click(() => {
            const selectedOption = $('option').val();
            console.log(selectedOption);
            clearFields();

            const assignURL = "/Asignacion/GetAsignaciones";
            const pertURL = "/Asignacion/GetAsignacionPertrechosM";

            fetchAssignments(assignURL, selectedOption);
            fetchInventoryItemsP(pertURL, selectedOption);
        });
    }

    function clearFields() {
        $('#rango, #nombre, #rangod, #nombred, #dir, #cedula').empty();
    }

    function fetchAssignments(url, noRango) {
        $.get(url, { noRango }, (response) => {
            if (response && response.length > 0) {
                clearFields();
                console.log(response);
                updateAssignmentDetails(response);
                $.each(response, (index, item) => {
                    fetchInventoryItems(response[index].idArma);
                })
            }
        });
    }

    function updateAssignmentDetails(assignments) {
        let uniqueAssignments = getUnique(assignments, 'asignacionRango', 'asignacionNombre');

        const rango = $('#rango');
        const nombre = $('#nombre');
        const rango2 = $('#rangod');
        const nombre2 = $('#nombred');
        const dir = $('#dir');
        const cedula = $('#cedula');

        $.each(uniqueAssignments, (index, item) => {
            rango.append($('<p>').text(item.asignacionRango));
            nombre.append($('<p>').text(item.asignacionNombre));
            nombre2.append($('<h2>').text(item.asignacionNombre));
            rango2.append($('<h3>').text(item.asignacionRango));            
            dir.append($('<p>').text(item.numeroCarnet));
            cedula.append($('<p>').text(item.cedula));
        });
    }
    function getUnique(arr, ...identifiers) {
        const uniqueData = new Map();

        arr.forEach((item) => {
            const key = identifiers.map(id => item[id]).join('|');
            if (!uniqueData.has(key)) {
                uniqueData.set(key, item);
            }
        });

        return Array.from(uniqueData.values());
    }

    function fetchInventoryItems(idArma) {
        const inventoryURL = "/Asignacion/GetVarmaAll";
        $.get(inventoryURL, { idArma }, (response) => {
            if (response && response.length > 0 ) {
                console.log(response);

                updateInventory(response);
            }
        });
    }

    function updateInventory(items) {
        const inventory = $('#invetario');
        $.each(items, (index, item) => {            
            const text = `01.- ${item.taNombre} MARCA ${item.armaMarcaDescripcion} CAL.${item.armaCalibre} NO.${item.armaSerie}`;
            inventory.append($('<li>').text(text));
        });
    }

    function fetchInventoryItemsP(url, militarNo) {
        $.get(url, { militarNo }, (response) => {
            if (response) {
                console.log(response);
                updateInventoryP(response);
            }
        });
    }
    function Pdf(url, selectedOption) {
        const btnSelector = $('#btnpdf');
        const pdfURL = "/Certification/Crearpdf25"
        btnSelector.click(() => {
            const selectedOption = $('option').val();
            $.get(pdfURL, { selectedOption }, (response) => {
                if (response) {
                    console.log(response);
                    updateInventoryP(response);

                }
            });
        })
    }

    function updateInventoryP(items) {
        const inventory = $('#invetario2');
        $.each(items, (index, item) => {
            const text = `0${item.cantidad}.- ${item.pertrechos_descripcion}`;
            inventory.append($('<li>').text(text));
        });
    }


    function formatDate(date) {
        return new Intl.DateTimeFormat('es-ES', {
            day: 'numeric',
            month: 'long',
            year: 'numeric'
        }).format(date);
    }

    document.addEventListener('DOMContentLoaded', function () {
        const date = new Date(); // Fecha de ejemplo
        const formattedDate = formatDate(date); // Obtiene la fecha formateada
        document.getElementById('fecha').textContent = formattedDate; // Actualiza el contenido del div
    });

</script>
